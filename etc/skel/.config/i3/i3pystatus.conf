# -*- coding: utf-8 -*-
##                    
#

import subprocess
import os
import os.path

from i3pystatus import Status
#from i3pystatus.weather import weathercom
#from i3pystatus.updates import pacman, cower

## Prog Variable
terminal     ="elokab-terminal"
filemanager  ="elokab-fm"
alsacontrol  ="pavucontrol-qt"
## Colors Variable
backColor='#222D32'
forColor='#c0b18b'

redColor='#d15d28'
greenColor='#7b8748'
greenColor2='#8b9a51'
bleuColor='#359494'
bleuColor2='#5EA1A4'
magentaColor='#85678f'
magentaColor2='#b294bb'
whiteColor='#c0b18b'


status = Status(logfile='~/i3pystatus.log')

## Menu -----------------------------------------------------------------[1]
status.register("text",
    
    text = "",
    color =magentaColor2,
    ## open my obmenubar
    #on_leftclick = "jgmenu_run",
    on_leftclick = "~/.config/rofi/rofi-sh -r",
    on_rightclick = terminal,

)
## Mpris ----------------------------------------------------------------[3]
status.register("text",
    text = "",
    color =bleuColor2,
    on_leftclick ="playerctl  -p goldfinch next",
    on_rightclick="goldfinch -togglehide",
)
status.register("shell",
 
        command= "$HOME/.config/qobbar/blocks.sh 14",
         color =bleuColor2,
        interval=5,
        on_leftclick ="playerctl -p goldfinch play-pause",
        on_rightclick="goldfinch -togglehide",
)
status.register("text",
    text = "",
    color =bleuColor2,
    on_leftclick ="playerctl -p goldfinch previous",
    on_rightclick="goldfinch -togglehide",
)

# status.register("text",
#     text = "",
#     color ="#f8f8ff",
#     on_leftclick ="zenity --text-info --title='weather' --width=260 --height=180  --html --url='wttr.in/algiers_0tqp_lang=fr.png'",
#     #rofion_rightclick="goldfinch -togglehide",
# )

## weather  ------------------------------------------------------------
# status.register( 'weather',
#     format='{current_temp}{temp_unit}[ {icon}][ {update_error}]',
#      colorize=False,
#      color_icons = {
# 	 'Fair': ('☼ معتدل', '#ffcc00'),
# 	 'Cloudy': ('☁ غائم', '#f8f8ff'),
# 	 'Partly Cloudy': ('☁ غائم جزئيا', '#844747'),
# 	 'Fog': (' الضباب', '#949494'),
# 	 'Sunny': ('☀ مشمس', '#ffff00'),
# 	 'default': ('', None),
# 	 'Rainy': ('⛈ ممطر', '#cbd2c0'),
# 	 'Thunderstorm': ('⚡ عاصفة رعدية', '#cbd2c0'),
# 	 'Snow': ('☃ ثلج', '#ffffff'),
# 	  },

#     hints={'markup': 'pango'},

#     backend=weathercom.Weathercom(
#         location_code='AGXX0001:1:AG',
#         units='metric',
#         ),
# )

## Power ----------------------------------------------------------------[2]
status.register("text",

   hints        = {"markup": "pango","separator": True,"separator_block_width": 2},
   color        =forColor,
  
   text         ="<span   background='"+redColor+"' color='"+forColor+"' >  .</span>",                	
   on_leftclick = "~/.config/rofi/rofi-sh -s",
   on_rightclick= terminal,
)
## CLOCK ---------------------------------------------------------------[4]
status.register("clock",

    hints       = {"markup": "pango","separator": True,"separator_block_width": 2},
    format      ="<span background='"+greenColor+"' color ='"+whiteColor+"' >  </span\
					><span background='"+whiteColor+"' >%H:%M %Y-%m-%d</span>",
					
    color       =backColor,
    interval    =1,
    on_leftclick="zenity --calendar ",
)

## ALSA SOUND ----------------------------------------------------------[5]
status.register("alsa",
    
    hints      = {"markup": "pango","separator": True,"separator_block_width": 2},
    format      = "<span background='"+bleuColor+"' color='"+forColor+"'>   </span\
					><span background='"+whiteColor+"'> {volume}% </span>",

     format_muted    = "<span background='"+bleuColor+"' color='"+forColor+"'>    </span\
	                    ><span background='"+whiteColor+"' > [muted] </span>",
     on_leftclick    = "amixer -D pulse set Master toggle",
     on_rightclick   = alsacontrol,
     color           = backColor,
     color_muted     = redColor,

)

## BACKLIGHT -----------------------------------------------------------[6]
status.register("backlight",
    interval    =5,
    color       = backColor,
     hints      = {"markup": "pango","separator": True,"separator_block_width": 2},
    format      = "<span background='"+magentaColor+"' color='"+forColor+"'>  </span\
					><span background='"+whiteColor+"'> {percentage:.0f}% </span>",
    backlight   ="intel_backlight",
)

## WIRRELESS -----------------------------------------------------------[7]
status.register("network",
	interface    ="wlp2s0",
	color_up     = backColor,
	color_down   =backColor,
     hints      = {"markup": "pango","separator": True,"separator_block_width": 2},
	format_up    = "<span background='"+bleuColor+"' color='"+forColor+"'>  </span\
					><span background='"+whiteColor+"'color='"+backColor+"' > ↓{bytes_recv:3.0f}k </span>",
	format_down  = "<span background='"+bleuColor+"' color='"+forColor+"'>  </span\
					><span background='"+whiteColor+"' >  </span>",
	on_leftclick = "cmst"
)

## BATTERY -------------------------------------------------------------[8]
status.register("battery",
    battery_ident   ="BAT1",
    interval        =3,
    hints           = {"markup": "pango","separator": True,"separator_block_width": 2},
    format          = "<span background='"+greenColor+"' color='"+forColor+"'>{status}</span\
						><span background='"+whiteColor+"'> {percentage:.0f}% </span>",
    alert           =True,
    alert_percentage=30,
    color           =backColor,
    critical_color  ="#FF1919",
    charging_color  =backColor,
    full_color      =backColor,
    status={
        "DIS":"  ",
        "CHR":"  ",
        "FULL":"  ",
    },
)

## TEMPIRATURE ---------------------------------------------------------[9]
status.register("temp",
	hints        = {"markup": "pango","separator": True,"separator_block_width": 2},
    format       = "<span background='"+magentaColor+"' color='"+forColor+"'>    </span\
					><span background='"+whiteColor+"'  > {temp:.0f}° </span>",
    color        =backColor,
    #dynamic_color=True,
    #lm_sensors_enabled=True,
    alert_color  = "#ff5500",
    alert_temp   = 65,
)

## MEMORY --------------------------------------------------------------[10]
#status.register("mem",
  	#hints       = {"markup": "pango","separator": True,"separator_block_width": 2},
    #color       =backColor,
    #warn_color  =backColor,
    #alert_color ="#FF1919",
    #format      = "<span background='"+greenColor+"' color='"+forColor+"'>    </span\
                 #><span background='"+whiteColor+"' > {percent_used_mem:.0f}% </span>",
    #interval=20,
#)

## CPU USAGE -----------------------------------------------------------[11]
status.register("cpu_usage",
	color          =backColor,
	hints          = {"markup": "pango","separator": True,"separator_block_width": 2},
    format         = "<span background='"+bleuColor+"'color='"+forColor+"'>  </span\
						><span background='"+whiteColor+"' > {usage:3.0f}% </span>",
    interval=5, 
    on_leftclick   =terminal+" -e 'htop'",          
)

## DISK USAGE ----------------------------------------------------------[12]
status.register("disk",
    hints       ={"markup": "pango","separator": True,"separator_block_width": 2},
    color       =backColor,
    path        ="/",
    interval    =60,
    on_leftclick=filemanager,
    format      ="<span background='"+greenColor+"'color='"+forColor+"'>  </span\
                ><span background='"+whiteColor+"' > {percentage_used:.0f}% </span>",
)

## Window title  -------------------------------------------------------[13]
status.register("window_title",
  #command ="xdotool getactivewindow getwindowname" ,
   max_width =50,
   color=forColor,
)

status.run()
